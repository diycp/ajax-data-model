{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap a326c6a5b331458bd31e","webpack:///./src/adm.jquery.js","webpack:///./src/common/settings.js","webpack:///./src/common/cache-helper.js","webpack:///./src/common/DataCache.js"],"names":[],"mappings":"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","file":"adm.jquery.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"adm\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"adm\"] = factory();\n\telse\n\t\troot[\"adm\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a326c6a5b331458bd31e\n **/","/**\n * @file 全局数据模型 model\n * 提供数据的读取、保存/缓存、删除、更新等操作。各模块 model 可继承该模型，以进行模块范围内的数据存取操作。\n * @module adm\n * @author lizhiwen@meizu.com\n * @since 2016-03-31 - 2016-08-16\n *\n * @example\n * import adm from 'ajax-data-model';\n * let upsModel = $.extend(true, {}, adm, {aa: 'ccc', restapi: {task_type: '/rest/task/type'}});\n * // 支持的方法：upsModel.get、upsModel.save、upsModel.delete、upsModel.clear\n * // 配置了 url，则都返回 Promise 对象，不管是否缓存\n * upsModel.get({url: '/rest/xxx'}).done().fail().then();\n * // 保存数据到 localStorage 中\n * upsModel.save('appList', [{music: 'test'}], 'localStorage');\n * // 通过名字获取，返回存储的数据或者 undefined\n * upsModel.get('appList');\n * upsModel.get('appList', 'localStorage');\n *\n * @example\n * // 获取 task_type 数据，并缓存到 sessionStorage。获取时优先从 sessionStorage 读取\n * DW.adm.get({\n *     url: upsModel.restapi.task_type,\n *     cache: 'sessionStorage',\n *     fromCache: 'sessionStorage',\n *     cacheName: 'task_dependType'\n * }).done((result) => {\n *     let taskTypeList = result.value || [];\n *     console.log(taskTypeList);\n * });\n */\n'use strict';\n\n// import $ from 'jquery';\n\nimport settings from './common/settings';\nimport {getCacheStor, deleteCacheDataByName, getCacheDataByName, saveTOCache, isString} from './common/cache-helper';\n\n/**\n * ajax 请求通用方法\n * @param {Object}   config - 请求参数配置\n * @param {String}   config.url - ajax url，必须存在，`config.ajaxParam` 中配置此参数无效\n * @param {Object}   config.ajaxParam - ajax 额外参数扩展，如涉及文件上传等\n * @param {Object}   config.data - ajax 请求的参数\n * @param {Object}   config.waiting - 用于传递给 settings.fnWaiting 方法使用的参数配置\n * @param {Object}   config.tipConfig[true] - ajax 出错时的提示配置。配置为 false 时，禁用全局的系统提示，包括 成功/出错/404/50x 等\n * @param {Object}   config.errAlert[true] - ajax error 时是否给出全局提示\n * @param {Function} callback - ajax 请求成功时回调\n * @param {Function} errCallback - ajax 请求失败或 code !== 200 时回调\n * @param {Object}   param - 传递给 ajax 请求的额外参数\n * @param {Function} fnCB - 请求到数据之后的立即回调方法，用于请求成功后需要前置处理的情况\n * @return {Object}  ajax - $.Deferred，用于自定义回调处理。注意：ajax 请求的 done/fail 回调，与 callback/errCallback 有区别，不会处理 code 是否为 200！\n */\nfunction requestAjax(config, callback, errCallback, fnCB) {\n    if (!config.url || typeof config.url !== 'string') {\n        console.trace('请求 URL API 不存在，或格式不对：', config.url);\n        return $.Deferred().reject('请求 URL API 不存在，或格式不对：', config.url);\n    }\n\n    // data.btnWaiting 的兼容，应使用 config.waiting 参数\n    if (config.data && config.data.btnWaiting) {\n        config.waiting = config.waiting || config.data.btnWaiting;\n        delete config.data.btnWaiting;\n    }\n\n    // ajax 请求前处理\n    if (config.waiting) {\n        settings.fnWaiting(config.waiting);\n    }\n\n    // jsonp 兼容\n    let dataType = 'json';\n\n    if (/^https?:\\/\\// .test(config.url) && config.url.search(window.location.host) === -1) {\n        dataType = 'jsonp';\n    }\n\n    // 请求前回调\n    if (settings.fnBeforeAjax) {\n        settings.fnBeforeAjax(config);\n    }\n\n    let ajax = $.ajax($.extend(true, {\n        type: 'GET',\n        dataType\n    }, config.ajaxParam, {\n        url: config.url,\n        data: config.data\n    })).done((result) => {\n        return settings.fnAjaxDone(result, (res) => {\n            if ($.isFunction(fnCB)) {\n                fnCB(result);\n            }\n\n            if ($.isFunction(callback)) {\n                callback(res);\n            }\n        }, errCallback, config);\n    }).fail((err) => {\n        settings.fnAjaxFail(err, config);\n\n        if ($.isFunction(errCallback)) {\n            errCallback(err);\n        }\n    }).always(() => {\n        if (config.waiting) {\n            settings.fnWaiting(config.waiting, true);\n        }\n    });\n\n    return ajax; // 返回 Promise 对象\n}\n\n/**\n * 全局数据模型 model\n * @alias module:adm\n * @type {Object}\n */\nexport default {\n    /**\n     * 数据获取，可为远程url、缓存等\n     * @param {Object} config 为字符串时，从缓存中读取数据，否则为从远程获取数据，参数如下：\n     * ```js\n     * {\n     *     url: '',\n     *     data: {},         // url 请求参数\n     *     cache: false,     // 配置了 url 获取数据时，是否缓存数据。可取值：`false/true/sessionStorage/localStorage`\n     *     fromCache: false, // 配置了 url，是否首先尝试从缓存中读取数据。可取值：`false/true/sessionStorage/localStorage`\n     *     cacheName: 'ddd', // 配置了 url，如果缓存数据，配置其名称，不配置则取值 url (/ 替换为 . 作为深度路径)\n     *     tipConfig: {delay: 2000} // ajax 出错时的提示配置。配置为 false 时，禁用全局的系统提示，包括 成功/出错/404/50x 等\n     *     errAlert: true    // ajax error 时是否给出全局提示\n     *     waiting: {}       // 按钮等待等配置，用于传递给 settings.fnWaiting 方法\n     *     ajaxParam: null   // ajax 额外参数扩展，如涉及文件上传等，需要修改部分参数。其中 url 参数无效，应当使用 config.url\n     * }\n     * ```\n     * @param {Object} callback 成功回调方法\n     * @param {Object} errCallback 从 url 获取时，失败后需要做一些处理的回调方法\n     * }\n     */\n    get(config, callback, errCallback) {\n        if (!config) {\n            return undefined;\n        }\n\n        let cacheName, cacheData, $promise = $.Deferred();\n\n        if (isString(config)) {\n            // 第一个参数为字符串，则为名称，直接返回对应值\n            cacheName = config;\n        }\n\n        // 配置了 url，从 url 中获取\n        if (config.url) {\n            cacheName = config.cacheName || config.url;\n            cacheData = getCacheDataByName(cacheName, config.fromCache);\n\n            // fromCache 为 true，尝试从缓存中获取数据\n            if (config.fromCache && cacheData) {\n                if ($.isFunction(callback)) {\n                    callback(cacheData);\n                }\n\n                $promise.resolve(cacheData);\n                // return cacheData; // 返回数据\n                return $promise; // 这里改了后不兼容旧的调用，应该注意 bug 的出现！\n            }\n\n            config.ajaxParam = $.extend(config.ajaxParam, {\n                type: 'GET'\n            });\n\n            return requestAjax(config, callback, errCallback, (result) => {\n                // cache 为 true，缓存数据\n                if (config.cache && Number(result.code) === 200) {\n                    this.save(cacheName, result, config.cache);\n                }\n            });\n        } else if (config.hasOwnProperty('url')) { // 配置了 url，但 url 值为空\n            console.trace('配置了 URL 参数，但值为空：', config);\n            $promise.reject('配置了 URL 参数，但值为空', config);\n        } else {\n            // 未配置 url，则必须配置 cacheName，或者 config 为字符串(作为cacheName)，从缓存中取得数据\n            if (!cacheName && config) {\n                cacheName = config.cacheName;\n            }\n            cacheData = getCacheDataByName(cacheName, config.fromCache || callback);\n\n            if ($.isFunction(callback)) {\n                callback(cacheData);\n            }\n\n            return cacheData;\n        }\n\n        return $promise;\n    },\n    /**\n     * 设置/存储数据\n     * @param {Object|String} config - 配置信息。也可以为字符串，则为需存储的数据名称。与 {@link module:adm~get} 的 config 参数相同\n     * @param {Function|Object} callback - 存储成功后回调方法。当 config 为字符串时，为需存储的数据，或方法执行后返回要存储的数据\n     * @param {Function|String} errCallback - 从 url 获取时，失败后需要做一些处理的回调方法。config 为字符串时，为 cacheType 类型\n     * @example\n     * // 存储数据到 localStorage，名称为 testdataName\n     * adm.save('testdataName', {test: 1}, 'localStorage');\n     * @example\n     * // 存储数据到远程，同时存储到 sessionStorage\n     * adm.save({url: '/rest/dd', data: {test: 1}, cache: 'sessionStorage'});\n     */\n    save(config, callback, errCallback) {\n        if (!config) {\n            return '';\n        }\n\n        let cacheName, cacheData, $promise = $.Deferred();\n\n        if (isString(config)) { // config 为字符串，则作为cacheName\n            cacheName = '' + config;\n            if ($.isFunction(callback)) { // 可以存储为回调方法执行后的结果\n                saveTOCache(cacheName, callback(), errCallback);\n            } else {\n                saveTOCache(cacheName, callback, errCallback);\n            }\n        } else if (config.url) { // 配置了 url，将数据存储到远程\n            config.ajaxParam = $.extend({\n                type: 'POST'\n            }, config.ajaxParam);\n\n            return requestAjax(config, callback, errCallback, (result) => {\n                if (config.cache) {\n                    cacheName = cacheName || config.url;\n                    // 远程存储成功了，本地也需缓存数据时\n                    saveTOCache(cacheName, result, config.cache);\n                }\n            });\n\n        } else if (config.hasOwnProperty('url')) { // 配置了url，但 url 值为空\n            console.trace('配置了 URL 参数，但值为空：', config);\n            $promise.reject('配置了 URL 参数，但值为空', config);\n        } else if (config.cacheName) { // 没有设置 url，但设置了 cacheName，则保存数据到本地\n            saveTOCache(config.cacheName, config.data, config.cache);\n\n            if ($.isFunction(callback)) {\n                callback(cacheData);\n            }\n        }\n\n        return $promise;\n    },\n    /**\n     * 删除一个数据\n     * @param {Object} config - 为字符串时，作为 cacheName 尝试从缓存中删除数据。否则格式如下：\n     * ```js\n     * {\n     *     url: '',       // 配置了 url，从远程删除数据，否则从缓存中删除\n     *     cache: false,  // 配置了 url，是否还尝试从缓存中删除数据。可取值：false/true/sessionStorage/localStorage\n     *     cacheName: ''  // 从缓存中删除数据时，提供其名称。\n     * }\n     * ```\n     */\n    delete(config, callback, errCallback) {\n        if (!config) {\n            return '';\n        }\n\n        let $promise = $.Deferred(),\n            cacheName;\n\n        if (isString(config) || config instanceof RegExp) {\n            // 第一个参数为字符串或正则，callback 就是 cacheType\n            deleteCacheDataByName(config, callback);\n            // 删除完成都返回执行成功\n            $promise.resolve();\n        } else if (config.url) {\n            // 配置了 url，从远程删除数据\n            return requestAjax(config, callback, errCallback, {\n                type: 'DELETE'\n            }, () => {\n                if (config.cache) {\n                    // 远程删除成功了，本地也需清空时\n                    cacheName = config.cacheName || config.url;\n                    deleteCacheDataByName(cacheName, config.cache);\n                }\n            });\n        } else if (config.hasOwnProperty('url')) { // 配置了url，但 url 值为空\n            console.trace('配置了 URL 参数，但值为空：', config);\n            $promise.reject('配置了 URL 参数，但值为空', config);\n        } else if (config && config.cacheName) {\n            deleteCacheDataByName(config.cacheName, config.cache);\n            $promise.resolve();\n        }\n\n        return $promise;\n    },\n    /**\n     * 返回所有存储中的所有数据\n     * @param  {String} cacheType 存储的类型：sessionStorage、localStorage 或 memory\n     * @return {Object}\n     */\n    getAll(cacheType) {\n        let cacheStor = getCacheStor(cacheType);\n        let item, key, _cache = {};\n\n        // 存到内存的地方在 cache 中\n        if (cacheStor.constructor.name === 'DataCache') {\n            cacheStor = cacheStor.cache;\n        }\n\n        for (item in cacheStor) {\n            if (!cacheStor.hasOwnProperty(item)) {\n                continue;\n            }\n\n            if (0 !== item.indexOf(settings.cachePrefix)) {\n                continue;\n            }\n\n            key = item.replace(settings.cachePrefix, '');\n            try {\n                _cache[key] = JSON.parse(cacheStor[item]);\n            } catch (e) {\n                _cache[key] = cacheStor[item];\n            }\n        }\n\n        return _cache;\n    },\n    /**\n     * 根据存储类型清空存储的所有数据\n     * @param  {String} cacheType\n     * @return {scope} this\n     */\n    clear(cacheType) {\n        deleteCacheDataByName(new RegExp('.*'), cacheType);\n\n        return this;\n    },\n    /**\n     * 修改缓存数据的前缀\n     * @param {String} prefix           以下划线开头，由字母、数字、或下划线组成\n     * @param {Boolean} clear[=true]    修改前缀前，是否移除已有的数据\n     */\n    setCachePrefix(prefix, clear = true) {\n        if (!/^_[_a-zA-Z]*_$/.test(prefix)) {\n            console.warn('以下划线开头和结尾，由字母、数字、或下划线组成');\n            return this;\n        }\n\n        if (clear) {\n            this.clear('sessionStorage');\n            this.clear('localStorage');\n            this.clear();\n        }\n\n        settings.cachePrefix = prefix;\n\n        return this;\n    },\n    /**\n     * 设置配置项\n     * @param {Object} setting\n     */\n    setSettings(setting) {\n        let item;\n\n        for (item in setting) {\n            if ('cachePrefix' === item) {\n                this.setCachePrefix(setting[item], true);\n            } else if (settings.hasOwnProperty(item)) {\n                settings[item] = setting[item];\n            }\n        }\n\n        return settings;\n    }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/adm.jquery.js\n **/","/**\n * @desc 配置信息，可以通过 `adm.setSettings` 方法修改\n * @alias settings\n * @type {Object}\n */\nexport default {\n    cachePrefix: '__DM__', // 缓存数据时使用的前缀\n    alert: (msg) => {      // 全局性提示方法注册，可根据项目的 alert 组件进行注册\n        console.trace(msg);\n        // window.alert(msg);\n    },\n    /**\n     * ajax 开始/结束时的状态处理\n     * 例如单击按钮后，在开始时禁用按钮，结束时恢复它；\n     * 再例如，在 ajax 开始时启用页面动画，结束时关闭页面动画。\n     * @param  {Object}  wait - 来自于 `data.btnWaiting` 参数，参数内容可根据 `fnWaiting` 具体的处理来设置。例如这里为：\n     * `{$btn:$btn, text:\"请求中..\", defaultText: \"提交\"}`\n     * @param  {Boolean} isEnd - true 时在 ajax 开始调用；为 false 时在 ajax 结束调用\n     * @return {void}\n     */\n    fnWaiting(wait, isEnd) {\n        if (wait && wait.$btn && wait.$btn.length) {\n            if (!isEnd) {\n                wait.$btn.data('defaultText', wait.$btn.html())\n                    .html(wait.text || '<i class=\"fa fa-spinner rotateIn animated infinite\"></i> 请求中...')\n                    .addClass('disabled').prop('disabled', true);\n            } else {\n                setTimeout(function () {\n                    // 连续提交延时处理，两次连续提交不能超过 200 ms\n                    wait.$btn.html(wait.defaultText || wait.$btn.data('defaultText'))\n                        .removeClass('disabled').prop('disabled', false);\n                }, 200);\n            }\n        }\n    },\n    /**\n     * ajax 请求前回调方法\n     * @param  {Object} config - ajax 请求配置，由于是引用传参，可在这里通过修改它实现 mock 数据等功能\n     * @return {void}\n     */\n    fnBeforeAjax(config) {},\n    /**\n     * 通用 ajax 请求返回处理\n     * 对于接口的约定，如这里以 `code` 为 `200` 认为是成功的数据，否则为出错\n     * @param {Object} result - ajax 返回的数据结果\n     * @param {Function} callback - 成功回调方法\n     * @param {Function} errCallback - 出错回调方法\n     * @param {Object} config - ajax 请求参数配置，即 `adm.get/save` 的第一个参数\n     */\n    fnAjaxDone(result, callback, errCallback, config) {\n        let $d = $.Deferred();\n\n        if (result && result.code === 200) {\n            if (callback) {\n                callback(result);\n            }\n\n            // code 200 认为成功，否则认为失败\n            $d.resolve(result);\n        } else {\n            $d.reject(result);\n\n            if (errCallback) {\n                errCallback(result);\n            }\n\n            // 设置为 false，则不进行系统提示，适合由用户自定义错误处理的情况\n            if (config.tipConfig === false) {\n                return $d;\n            }\n\n            result.message = result.message || '系统错误';\n            if (config.tipConfig) {\n                // 注册另一种系统提示\n                // config.tipConfig.message = result.message;\n                // MZ.tipmessage.fail(config.tipConfig);\n            } else {\n                this.alert(result.message);\n            }\n        }\n\n        return $d;\n    },\n    /**\n     * ajax 失败处理，一般为 30x、40x、50x 或返回格式不对、网络中断等\n     * @param  {Object} err\n     * @param  {Object} config\n     * @return {void}\n     */\n    fnAjaxFail(err, config) {\n        if (0 === err.status) {\n            this.alert('登录超时');\n            window.location.reload();\n        } else if (false !== config.errAlert) {\n            // errAlert = false 时禁止 40x/50x 等错误的全局提示\n            this.alert('数据请求失败: ' + (err.responseText || err.statusText));\n        }\n    }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/common/settings.js\n **/","/**\n * cache helper\n */\nimport settings from './settings';\nimport DataCache from './DataCache';\n\n// 缓存数据对象。为了避免混淆，只缓存至一级结构\nconst dataCache = new DataCache();\n\n/**\n * 修正 cacheName\n * @param  {String} cacheName 原始的值，可能是任意格式\n * @return {String}           修正后的 cacheName，以 cachePrefix 开头\n */\nfunction adjustCacheName(cacheName) {\n    if (!cacheName) {\n        return '';\n    }\n\n    cacheName = encodeURIComponent(('' + cacheName).replace(/\\//g, '.').replace(/^\\./, '').replace(/(^\\s+|\\s+$)/g, ''));\n    if (cacheName.indexOf(settings.cachePrefix) !== 0) {\n        cacheName = settings.cachePrefix + cacheName;\n    }\n\n    return cacheName;\n}\n/**\n * 根据 cacheType 取得 cacheStorage 对象\n * @param  {String} cacheType\n * @return {Object}\n */\nexport function getCacheStor(cacheType) {\n    let cacheStor = dataCache;\n\n    if ('sessionStorage' === cacheType || 'localStorage' === cacheType) {\n        cacheStor = window[cacheType] || cacheStor;\n    }\n\n    return cacheStor;\n}\n/**\n * 根据 cacheName 名称层级获取对应 dataCache 中的缓存数据\n * @param  {String} cacheName - 名称，以 . 分割层级，如 ups.pa.query.tags.group\n * @param  {String} cacheType - 缓存类型：sessionStorage、localStorage 、 memory(默认)\n * @return {*}                  返回读取到的数据\n */\nexport function getCacheDataByName(cacheName, cacheType) {\n    let data, cacheStor = getCacheStor(cacheType);\n\n    if (!(cacheName = adjustCacheName(cacheName))) {\n        return data;\n    }\n\n    try {\n        data = JSON.parse(cacheStor.getItem(cacheName));\n    } catch (e) {\n        data = cacheStor.getItem(cacheName);\n    }\n\n    return data || undefined;\n}\n/**\n * 根据 cacheName 名称尝试移除缓存中存在的数据\n * @param  {String|RegExp}  cacheName - 名称，以 . 分割层级，如 ups.pa.query.tags.group。支持正则匹配\n * @param  {String} cacheType - 缓存类型：sessionStorage、localStorage 、 memory(默认)\n * @return {*}\n */\nexport function deleteCacheDataByName(cacheName, cacheType) {\n    let item,\n        cacheStor = getCacheStor(cacheType),\n        cache = cacheStor;\n\n    if (cacheStor.constructor.name === 'DataCache') {\n        cache = cacheStor.cache;\n    }\n\n    // 为正则，支持模糊删除\n    if (cacheName instanceof RegExp) {\n        for (item in cache) {\n            if (!cache.hasOwnProperty(item) || // 自有属性\n                item.indexOf(settings.cachePrefix) !== 0     // 过滤前缀\n            ) {\n                continue;\n            }\n\n            // 规则检测\n            if (!cacheName.test(item.slice(settings.cachePrefix.length))) {\n                continue;\n            }\n\n            // 符合规则，移除\n            cacheStor.removeItem(item);\n        }\n\n        return;\n    }\n\n    // 精确的查找与删除\n    if (!(cacheName = adjustCacheName(cacheName))) {\n        return;\n    }\n\n    cacheStor.removeItem(cacheName);\n}\n/**\n * 存储数据到本地\n * @param {String} cacheName - 用于存储的名称\n * @param {*}      data - 任意类型的数据\n * @param {String} cacheType - 存储类型，支持三种方式：sessionStorage、localStorage 和内存中(默认)\n */\nexport function saveTOCache(cacheName, data, cacheType) {\n    if (!(cacheName = adjustCacheName(cacheName))) {\n        return;\n    }\n\n    const cacheStor = getCacheStor(cacheType);\n\n    if (cacheStor === dataCache) {\n        // 存到内存 dataCache\n        cacheStor.setItem(cacheName, data);\n    } else {\n        cacheStor.setItem(cacheName, JSON.stringify(data));\n    }\n}\n\n/**\n * 是否为类字符串\n */\nexport function isString(text) {\n    let type = typeof text;\n\n    if ('string' === type || 'number' === type) {\n        return true;\n    }\n    return false;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/common/cache-helper.js\n **/","/**\n * @file 基本的数据缓存类\n */\n\n/**\n * 内存缓存数据对象类，与 `localStorage` API 保持一致\n */\nclass DataCache {\n    constructor() {\n        this.length = 0;\n        this.cache = {};\n    }\n    /**\n     * 获取值\n     * @param  {String} key\n     * @return {*}\n     */\n    getItem(key) {\n        return this.cache[key];\n    }\n    /**\n     * 设置值\n     * @param {String} key\n     * @param {*} value\n     */\n    setItem(key, value) {\n        this.cache[key] = value;\n        this.length++;\n    }\n    /**\n     * 删除一个值\n     * @param  {String} key\n     * @return {void}\n     */\n    removeItem(key) {\n        if (this.cache.hasOwnProperty(key)) {\n            this.length--;\n            delete this.cache[key];\n        }\n    }\n    /**\n     * 清空\n     */\n    celar() {\n        this.length = 0;\n        this.cache = {};\n    }\n    /**\n     * 取得第 index 个值\n     * @param  {Number} index\n     * @return {*}\n     */\n    key(index) {\n        let item, _index = 0;\n\n        for (item in this.cache) {\n            if (index === _index) {\n                return this.cache[item];\n            }\n            _index++;\n        }\n\n        return null;\n    }\n}\n\nexport default DataCache;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/common/DataCache.js\n **/"],"sourceRoot":""}